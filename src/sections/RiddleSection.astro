---
import ImageController from "../components/ImageController.astro"
import VideoController from "../components/VideoController.astro"
---

<section class="riddle-section">
  <div class="opacity__container">
    <audio src="/sounds/error.mp3" id="error"></audio>
    <audio src="/sounds/STAHP.mp3" id="stahpSound"></audio>
    <audio src="/sounds/discogirl.mp3" id="discoGirl"></audio>
    <audio src="/sounds/content-reveal.mp3" id="content-reveal"></audio>
    <audio src="/sounds/We'll meet again.mp3" id="billWellMeetAgainAudio"></audio>
    <h1>â–³</h1>
  <div class="content__form">
    <input type="text" id="input" autocomplete="off"/>
    <button type="submit" id="submitBtn">
      <p class="text__button">Submit</p>
    </button>
  </div>
  <p id="result">PLS, dont type "CODES"</p>
  </div>
  <VideoController />
  <ImageController />
</section>

<style>
  #result {
    font-size: 1rem;
    color: #fff;
    text-align: center;
    text-wrap: pretty;
  }

  h1 {
    font-size: 5rem;
    color: #fff;
    user-select: none;
  }

  .riddle-section {
    display: flex;
    flex-direction: column;
    justify-content: center;
    height: 100vh;
  }

  .opacity__container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    opacity: 0;
    filter: blur(5px);
    transition: opacity 2s ease-in-out, filter 2s ease-in-out;
  }

  .opacity__container.loaded {
    opacity: 1; /* Aparece gradualmente */
    filter: blur(0); /* El desenfoque desaparece gradualmente */
  }

  .content__form {
    display: flex;
    flex-direction: row;
    gap: 0.5rem;
  }

  input {
    width: 200px;
    height: 40px;
    border-radius: 5px;
    border: 2px solid grey;
    padding: 6px;
    color: #fff;
    text-transform: uppercase;
  }

  input:focus {
    border: 2px solid #fff;
  }

  button {
    width: 80px;
    height: 40px;
    border-radius: 8px;
    border: 2px solid #fff;
    padding: 8px;
    background-color: #000;
    transition: all 0.4s ease;
  }

  button:hover {
    border: 2px solid #000;
    background-color: #fff;
  }

  button:hover .text__button {
    color: #000;
  }

  .text__button {
    color: #fff;
    font-weight: bold;
    text-align: center;
    font-size: 1rem;
    text-transform: uppercase;
  }

  @keyframes blink_error {
    0%,
    100% {
      background-color: rgba(255, 0, 0, 0.205);
    }
    50% {
      background-color: transparent;
    }
  }

  @keyframes blink_correct {
    0%,
    100% {
      background-color: #1cd15970;
    }
    50% {
      background-color: transparent;
    }
  }

  .blink_error {
    animation: blink_error 0.3s ease-in-out 3;
  }

  .blink_correct {
    animation: blink_correct 0.3s ease-in-out 2;
  }
</style>

<script>
  import { isOpen } from '../utils/store.js';
  import { codes } from '../utils/codes.js';
  import { actions } from '../utils/actions';
  import { resetBlinkEffect, playErrorSound } from '../utils/utils.js';

  function checkCode() {
    const input = (document.getElementById('input') as HTMLInputElement).value.toUpperCase();
    const result = codes[input] || "Incorrect code. Try again.";
    const resultElement = document.getElementById('result');

    if (!codes[input]) {
      playErrorSound();
      resetBlinkEffect(false);
      resultElement.innerText = result;
    } else if (actions[input]) {
      actions[input]();
    } else {
      resetBlinkEffect(true);
      resultElement.innerText = result;
    }
  }

  document.getElementById('input').addEventListener('keydown', function(event) {
    if (event.key === 'Enter') {
      checkCode();
    }
  });

  document.getElementById('submitBtn').addEventListener('click', function() {
    checkCode();
  });

  isOpen.subscribe((open) => {
    if (open) {
      setTimeout(() => {
        const opacityContainer = document.querySelector('.opacity__container');
        opacityContainer.classList.add('loaded');
      }, 8000)
    }
  })
</script>

---
import ImageController from "../components/ImageController.astro"
import VideoController from "../components/VideoController.astro"
---

<section class="riddle-section">
  <div class="opacity__container">
    <audio src="/sounds/error.mp3" id="error"></audio>
    <audio src="/sounds/STAHP.mp3" id="stahpSound"></audio>
    <audio src="/sounds/content-reveal.mp3" id="content-reveal"></audio>
    <h1>△</h1>
  <div class="content__form">
    <input type="text" id="input" autocomplete="off"/>
    <button type="submit" id="submitBtn">
      <p class="text__button">Submit</p>
    </button>
  </div>
  <p id="result">bla</p>
  </div>
  <VideoController />
  <ImageController />
</section>

<style>
  #result {
    font-size: 1rem;
    color: #fff;
    opacity: 0;
    text-align: center;
    text-wrap: pretty;
  }

  h1 {
    font-size: 5rem;
    color: #fff;
    user-select: none;
  }

  .riddle-section {
    display: flex;
    flex-direction: column;
    justify-content: center;
    height: 100vh;
  }

  .opacity__container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    opacity: 0;
    filter: blur(5px);
    transition: opacity 2s ease-in-out, filter 2s ease-in-out;
  }

  .opacity__container.loaded {
    opacity: 1; /* Aparece gradualmente */
    filter: blur(0); /* El desenfoque desaparece gradualmente */
  }

  .content__form {
    display: flex;
    flex-direction: row;
    gap: 0.5rem;
  }

  input {
    width: 200px;
    height: 40px;
    border-radius: 5px;
    border: 2px solid grey;
    padding: 6px;
    color: #fff;
    text-transform: uppercase;
  }

  input:focus {
    border: 2px solid #fff;
  }

  button {
    width: 80px;
    height: 40px;
    border-radius: 8px;
    border: 2px solid #fff;
    padding: 8px;
    background-color: #000;
    transition: all 0.4s ease;
  }

  button:hover {
    border: 2px solid #000;
    background-color: #fff;
  }

  button:hover .text__button {
    color: #000;
  }

  .text__button {
    color: #fff;
    font-weight: bold;
    text-align: center;
    font-size: 1rem;
    text-transform: uppercase;
  }

  @keyframes blink_error {
    0%,
    100% {
      background-color: rgba(255, 0, 0, 0.205);
    }
    50% {
      background-color: transparent;
    }
  }

  @keyframes blink_correct {
    0%,
    100% {
      background-color: #1cd15970;
    }
    50% {
      background-color: transparent;
    }
  }

  .blink_error {
    animation: blink_error 0.3s ease-in-out 3;
  }

  .blink_correct {
    animation: blink_correct 0.3s ease-in-out 2;
  }
</style>

<script>
  import { isOpen } from '../utils/store.js';
  import { codes } from '../utils/codes.js';

  function resetBlinkEffect(state: Boolean) {
    const inputElement = document.getElementById('input') as HTMLInputElement;
    
    if (state) {
      inputElement.classList.remove('blink_correct');
      void inputElement.offsetWidth; // Forzar reflujo para reiniciar la animación
      inputElement.classList.add('blink_correct');
      return;
    }

    // reset input value
    // Reinicia la animación del parpadeo
    inputElement.classList.remove('blink_correct');
    inputElement.classList.remove('blink_error');
    void inputElement.offsetWidth; // Forzar reflujo para reiniciar la animación
    inputElement.classList.add('blink_error');
    inputElement.value = '';
  }

  function playErrorSound() {
    const errorSound = document.getElementById('error') as HTMLAudioElement;
    errorSound.currentTime = 0; // Reinicia el sonido al inicio
    errorSound.volume = 1;
    errorSound.play();
  }

  function checkCode() {
    const input = (document.getElementById('input') as HTMLInputElement).value.toUpperCase();
    const result = codes[input] || "Incorrect code. Try again.";
    const opacityContainer = document.querySelector('.opacity__container');
    const videoContainer = document.getElementById('videoContainer');
    const doritoVideo = document.getElementById('doritoVideo') as HTMLVideoElement;
    const burnedInsideVideo = document.getElementById('burnedInsideVideo') as HTMLVideoElement;
    const imageContainer = document.getElementById('imageContainer');
    const contentRevealSound = document.getElementById('content-reveal') as HTMLAudioElement;
    const babyBillImage = document.getElementById('babyBillImage') as HTMLImageElement;
    const yoyoImage = document.getElementById('yoyoImage') as HTMLImageElement;
    const resurrectionImage = document.getElementById('resurrectionImage') as HTMLImageElement;
    const notApproved = document.getElementById('notApproved') as HTMLImageElement;
    const buttonCloseBottom = document.getElementById('close__container-bottom') as HTMLButtonElement;
    const lamarImage = document.getElementById("lamarImage") as HTMLImageElement;
    const scientistImage = document.getElementById("scientistImage") as HTMLImageElement;
    const stahpSound = document.getElementById('stahpSound') as HTMLAudioElement;
    const hl3Image = document.getElementById("hl3Image") as HTMLImageElement;
    const sadleysBar = document.getElementById("sadleysBar") as HTMLImageElement;
    const cardBill = document.getElementById("cardBill") as HTMLImageElement;
    const cloneDipper = document.getElementById("cloneDipper") as HTMLImageElement;
    const conspiracyVideo = document.getElementById("conspiracyVideo") as HTMLVideoElement;
    const jeffVideo = document.getElementById("jeffVideo") as HTMLVideoElement;

    if (!codes[input]) {
      // Si el código es incorrecto
      playErrorSound();
      resetBlinkEffect(false);
      document.getElementById("result").innerText = result;
    } else if (input === "MYSTERY") {
        resetBlinkEffect(true);
        document.getElementById("result").innerText = result;
        setTimeout(() => {
          window.location.href = "/mystery";
        }, 4000); 
      } else if (input === "BILL") {
        document.getElementById("result").innerText = result;
        resetBlinkEffect(true);
        setTimeout(() => {
          window.open("https://en.wikipedia.org/wiki/Eye_of_Providence", "_blank");
        }, 1000); 
      } else if (input === "BILLCIPHER") {
        document.getElementById("result").innerText = result;

        resetBlinkEffect(true);
        setTimeout(() => {
          window.open("https://en.wikipedia.org/wiki/Triangle", "_blank");
        }, 1000); 
      } else if (input === "DORITO" || input === "CHIP") {
        document.getElementById("result").innerText = result;

        opacityContainer.classList.remove('loaded');
        videoContainer.style.display = 'block';
        doritoVideo.classList.add("visible");
        doritoVideo.play();

        doritoVideo.addEventListener('ended', () => {
          doritoVideo.classList.remove("visible");
          videoContainer.style.display = 'none'; // Oculta el video después de reproducirse
          opacityContainer.classList.add('loaded'); // Asegura que la sección esté completamente visible
        });
      } else if (input === "BABY" || input === "BABYBILL") {
        imageContainer.style.display = 'flex';
        babyBillImage.classList.add("visible")
        document.getElementById("result").innerText = '';
        document.getElementById("text-image").innerText = result;
        contentRevealSound.volume = 1;
        contentRevealSound.play();
      } else if (input === "YOYO") {
        imageContainer.style.display = 'flex';
        yoyoImage.classList.add("visible")
        document.getElementById("result").innerText = '';
        document.getElementById("text-image").innerText = result;
        contentRevealSound.volume = 1;
        contentRevealSound.play();
      } else if (input === "MUERTE") {
        imageContainer.style.display = 'flex';
        resurrectionImage.classList.add("visible")
        document.getElementById("result").innerText = '';
        document.getElementById("text-image").innerText = result;
        contentRevealSound.volume = 1;
        contentRevealSound.play();
      } else if (input === "CUM" || input === "ASSHOLE" || input === "BITCH") {
        imageContainer.style.display = 'flex';
        notApproved.classList.add("visible");
        buttonCloseBottom.classList.add("not-display");
        document.getElementById("result").innerText = '';
        document.getElementById("text-image").innerText = "";
        contentRevealSound.volume = 1;
        contentRevealSound.play();
      } else if (input === "HL1") {
        imageContainer.style.display = 'flex';
        scientistImage.classList.add("visible");
        document.getElementById("result").innerText = '';
        document.getElementById("text-image").innerText = result;
        stahpSound.volume = .5;
        stahpSound.play();
        contentRevealSound.volume = 1;
        contentRevealSound.play();
      } else if (input === "HL3") {
        imageContainer.style.display = 'flex';
        hl3Image.classList.add("visible");
        document.getElementById("result").innerText = '';
        document.getElementById("text-image").innerText = result;
        contentRevealSound.volume = 1;
        contentRevealSound.play();
      } else if (input === "HL2") {
        imageContainer.style.display = 'flex';
        lamarImage.classList.add("visible");
        document.getElementById("result").innerText = '';
        document.getElementById("text-image").innerText = result;
        contentRevealSound.volume = 1;
        contentRevealSound.play();
      } else if (input === "CRYPTOGRAMCODEX") {
        const downloadLink = document.createElement("a");
        downloadLink.href = "/download/CRYPTOGRAM CODEX.zip"; // Ruta del archivo
        downloadLink.download = "CRYPTOGRAM CODEX.zip"; // Nombre del archivo para descargar
        document.body.appendChild(downloadLink); // Agregar al DOM
        downloadLink.click(); // Simula un clic para iniciar la descarga
        document.body.removeChild(downloadLink); // Elimina el enlace del DOM
        resetBlinkEffect(true);
        document.getElementById("result").innerText = result;
      } else if (input === "BREAKUP") {
        imageContainer.style.display = 'flex';
        sadleysBar.classList.add("visible");
        const downloadLink = document.createElement("a");
        downloadLink.href = "/download/OSADLEYSLOGO.zip"; // Ruta del archivo
        downloadLink.download = "OSADLEYSLOGO.zip"; // Nombre del archivo para descargar
        document.body.appendChild(downloadLink); // Agregar al DOM
        downloadLink.click(); // Simula un clic para iniciar la descarga
        document.body.removeChild(downloadLink); // Elimina el enlace del DOM
        resetBlinkEffect(true);
        document.getElementById("result").innerText = "";
        document.getElementById("text-image").innerText = result;
      } else if (input === "BURNEDINSIDE") {
        document.getElementById("result").innerText = result;

        opacityContainer.classList.remove('loaded');
        videoContainer.style.display = 'block';
        burnedInsideVideo.classList.add("visible");
        burnedInsideVideo.play();

        burnedInsideVideo.addEventListener('ended', () => {
          burnedInsideVideo.classList.remove("visible");
          videoContainer.style.display = 'none'; // Oculta el video después de reproducirse
          opacityContainer.classList.add('loaded'); // Asegura que la sección esté completamente visible
        });
      } else if (input === "DISPENSE MY TREAT") {
        const downloadLink = document.createElement("a");
        downloadLink.href = "/download/BILLS FILES DO NOT OPEN!!.zip"; // Ruta del archivo
        downloadLink.download = "BILLS FILES DO NOT OPEN!!.zip"; // Nombre del archivo para descargar
        document.body.appendChild(downloadLink); // Agregar al DOM
        downloadLink.click(); // Simula un clic para iniciar la descarga
        document.body.removeChild(downloadLink); // Elimina el enlace del DOM
        resetBlinkEffect(true);
        document.getElementById("result").innerText = result;
      } else if (input === "CARD") {
        imageContainer.style.display = 'flex';
        cardBill.classList.add("visible");
        buttonCloseBottom.classList.add("not-display");
        document.getElementById("result").innerText = '';
        document.getElementById("text-image").innerText = "";
        contentRevealSound.volume = 1;
        contentRevealSound.play();
      } else if (input === "CLONE") {
        imageContainer.style.display = 'flex';
        cloneDipper.classList.add("visible")
        document.getElementById("result").innerText = '';
        document.getElementById("text-image").innerText = result;
        contentRevealSound.volume = 1;
        contentRevealSound.play();
      } else if (input === "CONSPIRACY") {
        document.getElementById("result").innerText = result;

        opacityContainer.classList.remove('loaded');
        videoContainer.style.display = 'block';
        conspiracyVideo.classList.add("visible");
        conspiracyVideo.play();

        conspiracyVideo.addEventListener('ended', () => {
          conspiracyVideo.classList.remove("visible");
          videoContainer.style.display = 'none'; // Oculta el video después de reproducirse
          opacityContainer.classList.add('loaded'); // Asegura que la sección esté completamente visible
        });
      } else if (input === "CRAZ") {
        document.getElementById("result").innerText = result;

        resetBlinkEffect(true);
        setTimeout(() => {
          window.open("https://www.youtube.com/watch?v=lkQE5wuBFeY", "_blank");
        }, 1000); 
      } else if (input === "CREEPYPASTA") {
        document.getElementById("result").innerText = result;

        opacityContainer.classList.remove('loaded');
        videoContainer.style.display = 'block';
        jeffVideo.classList.add("visible");
        jeffVideo.play();

        jeffVideo.addEventListener('ended', () => {
          jeffVideo.classList.remove("visible");
          videoContainer.style.display = 'none'; // Oculta el video después de reproducirse
          opacityContainer.classList.add('loaded'); // Asegura que la sección esté completamente visible
        });
      } else {
        resetBlinkEffect(true);
        document.getElementById("result").innerText = result;
      }

    document.getElementById("result").style.opacity = "1";
  }

  document.getElementById('input').addEventListener('keydown', function(event) {
    if (event.key === 'Enter') {
      checkCode();
    }
  });

  document.getElementById('submitBtn').addEventListener('click', function() {
    checkCode();
  });

  isOpen.subscribe((open) => {
    if (open) {
      setTimeout(() => {
        const opacityContainer = document.querySelector('.opacity__container');
        opacityContainer.classList.add('loaded');
      }, 8000)
    }
  })
</script>
